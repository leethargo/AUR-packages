diff --git a/setup.py b/setup.py
index 7a2ff98..a90f2f0 100644
--- a/setup.py
+++ b/setup.py
@@ -6,7 +6,7 @@ def zibopt_ext(name, c_file):
     # C_INCLUDE_PATH and LIBRARY_PATH, respectively.
     return Extension('zibopt.%s' % name, 
         sources = ['src/ext/%s' % c_file],
-        libraries = ['zibopt']
+        libraries = ['scipopt']
     )
 
 setup (
diff --git a/src/ext/lpmodule.c b/src/ext/lpmodule.c
index 527c79a..c8b630b 100644
--- a/src/ext/lpmodule.c
+++ b/src/ext/lpmodule.c
@@ -19,7 +19,7 @@ static int lp_init(lp *self, PyObject *args, PyObject *kwds) {
         return -1;
     }
     
-    PY_SCIP_CALL(error, -1, SCIPlpiCreate(&self->lpi, "", sense));
+    PY_SCIP_CALL(error, -1, SCIPlpiCreate(&self->lpi, NULL, "", sense));
 
     return 0;
 }
diff --git a/src/ext/scipmodule.c b/src/ext/scipmodule.c
index 7f9e5ed..aaea962 100644
--- a/src/ext/scipmodule.c
+++ b/src/ext/scipmodule.c
@@ -47,9 +47,7 @@ static int solver_init(solver *self, PyObject *args, PyObject *kwds) {
 
     // Turn on/off solver chatter
     if (quiet) {
-        PY_SCIP_CALL(error, -1, SCIPsetMessagehdlr(NULL));
-    } else {
-        PY_SCIP_CALL(error, -1, SCIPsetDefaultMessagehdlr());
+        PY_SCIP_CALL(error, -1, SCIPsetMessagehdlr(self->scip, NULL));
     }
 
     return 0;
diff --git a/src/ext/varsmodule.c b/src/ext/varsmodule.c
index 3c4f02e..75e8e3d 100644
--- a/src/ext/varsmodule.c
+++ b/src/ext/varsmodule.c
@@ -125,9 +125,8 @@ static PyObject *variable_set_coefficient(variable *self, PyObject *arg) {
         // lp           current LP data
         // eventqueue 	event queue
         // newobj       new objective value for variable 
-        PY_SCIP_CALL(error, NULL, 
-            SCIPvarChgObj(self->variable, NULL, self->scip->set, NULL, NULL, NULL, 
-                (SCIP_Real) PyFloat_AsDouble(arg))
+        PY_SCIP_CALL(error, NULL,
+            SCIPchgVarObj(self->scip, self->variable, (SCIP_Real) PyFloat_AsDouble(arg))
         );
         Py_RETURN_NONE;
         
